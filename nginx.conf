events {}
http{
include /etc/nginx/mime.types;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    error_log  /var/log/nginx/error_log;
    access_log  /var/log/nginx/access.log; 
    upstream web {
        ip_hash;
        server zws2.web.telegram.org:443;
    }

server {
    listen 8080;
    listen 8443 ssl;
    server_name domain;
   # ssl on;
    ssl_certificate /etc/nginx/cert.crt;
    ssl_certificate_key /etc/nginx/cert.key;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_protocols SSLv3 SSLv2 TLSv1 TLSv1.1 TLSv1.2; 
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_prefer_server_ciphers on;
    add_header X-Frame-Options sameorigin always;
  #  auth_basic "Restricted Content";
  #  auth_basic_user_file /etc/nginx/.htpasswd;
  

    
    location / {
                root /Telegram/dist;
                index index.html;
        }
     
    location /app {   
     auth_basic "off";

     proxy_pass https://zws2.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;    
     proxy_set_header Upgrade $http_upgrade;    
     proxy_set_header Connection $connection_upgrade;    


     }
    location /update {
     auth_basic "off";

     proxy_pass https://zws1.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /reload {
     auth_basic "off";

     proxy_pass https://zws2-1.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /test {
     auth_basic "off";

     proxy_pass https://zws1-1.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /get {
     auth_basic "off";

     proxy_pass https://zws4.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /create {
     auth_basic "off";

     proxy_pass https://zws4-1.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /delete {
     auth_basic "off";

     proxy_pass https://zws3.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
    location /push {
     auth_basic "off";

     proxy_pass https://zws5.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

    }
   location /apiws {
     auth_basic "off";

     proxy_pass https://zws2.web.telegram.org/apiws;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;
     }
   location /_websync_ {
     auth_basic "off";

     proxy_pass https://telegram.me/_websync_?authed=1&version=1.55.7+Z;
     proxy_http_version 1.1;
     proxy_ssl_certificate /etc/nginx/cert.crt;
     proxy_ssl_certificate_key /etc/nginx/cert.key;

}
}
}
